{"name":"Jsdata","tagline":"Interactive Data Visualization in jQuery, Javascript, and HTML5.","body":"JSData\r\n======\r\n\r\n\r\n\r\nWeb Interactive Data Visualization using jQuery, Javascript, and HTML5.\r\n\r\n#Global Rules\r\n<ul>\r\n<li> All Data objects must be initialized through their respective jQuery functions AFTER the document is ready (within the document.ready function like in the test.html file)</li>\r\n<li> All data-point's colors are determined by the \"color\" attribute in their CSS style </li>\r\n</ul>\r\n\r\n#Classes\r\n##Data-Pie\r\nInitialization:\r\n```javascript\r\n$(\"#myPieDiv\").pie();\r\n```\r\n\r\n####Data Value Attribute Structure:\r\n`data-val=\"x\"`\r\n#####Example:\r\n\r\n    <span class=\"data-point\" data-val=\"5\"></span>\r\n    <span class=\"data-point\" data-val=\"2.7\"></span>\r\n\r\n\r\n####Data Attributes:\r\n<table>\r\n<tr>\r\n<th>Name</th><th>Purpose</th><th>Input Options</th><th>Default</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>data-pie-show-text</td><td>Show Text on hover</td><td>true or false</td><td>true</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>data-pie-hover-sticky</td><td>Keep the segment hovered even after exit</td><td>true or false</td><td>false</td>\r\n</tr>\r\n\r\n</table>\r\n\r\n###HTML Example:\r\n    <div class=\"data-pie\" id=\"myPieDiv\" data-pie-show-text=\"true\"\r\n        style=\"width:500px;500px;\"></div>\r\n\r\n##Data-ScatterGraph\r\nInitialization:\r\n    javascript\r\n    $(\"#myScatterGraph\").scattergraph();\r\n    \r\n####Data Value Attribute Structure:\r\n    data-val=\"x,y\"\r\n#####Example:\r\n    <span class=\"data-point\" data-val=\"2.5,3.7\"></span>\r\n\r\n\r\n###Data Attributes:\r\n<table>\r\n\r\n<tr>\r\n<th>None</th>\r\n</tr>\r\n\r\n</table>\r\n\r\n###HTML Example:\r\n    <div class=\"data-scattergraph\" id=\"myScatterGraph\" \r\n        style=\"width:500px;500px;\"></div>\r\n\r\n#Functions\r\n\r\n##bindDataPoint(element)\r\n\r\n####Purpose:\r\nBinds the object's data-val attribute to the element's value\r\n####Example:\r\n    $(\"#testPoint\").bindDataPoint($(\"#bindBox\"));\r\n\r\n\r\n##bindDataPoint(eventData,element)\r\n\r\n####Purpose:\r\nBinds the object's data-val attribute to the element's value that updates on eventData\r\n####Example:\r\n\t$(\"#secondTest\").bindDataPoint(\"keyup\",$(\"#bindBox2\"));\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}